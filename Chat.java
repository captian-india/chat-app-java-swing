/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat;

import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.*; 
import java.net.*; 
import java.text.SimpleDateFormat;
import java.util.*; 
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;


public class Chat extends javax.swing.JFrame {

    /**
     * Creates new form Chat
     */
    
    int ServerPort; 
    int FilePort;
    boolean loggedout;
    volatile boolean serverOffline;
    volatile String recipient;
    BlockingQueue<String> outputQ;
    BlockingQueue<File> outputFileQ;
    BlockingQueue<String> inputFileQ;
    StyledDocument doc;
    SimpleAttributeSet left,right;
    
    public Chat() {
        
        ServerPort = 1234;
        FilePort = 1235;
        loggedout = false;
        serverOffline = false;
        outputQ = new LinkedBlockingQueue<>();
        outputFileQ = new LinkedBlockingQueue<>();
        inputFileQ = new LinkedBlockingQueue<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NameFrame = new javax.swing.JFrame();
        NameLabel = new javax.swing.JLabel();
        NameText = new javax.swing.JTextField();
        NameOk = new javax.swing.JButton();
        NameCancel = new javax.swing.JButton();
        ErrorLabel = new javax.swing.JLabel();
        MainPanel = new javax.swing.JPanel();
        InputPane = new javax.swing.JScrollPane();
        InputArea = new javax.swing.JTextArea();
        MyName = new javax.swing.JLabel();
        LeftPanel = new javax.swing.JTabbedPane();
        ContactsPane = new javax.swing.JScrollPane();
        ContactList = new javax.swing.JList<>();
        GroupsPane = new javax.swing.JScrollPane();
        Attachments = new javax.swing.JButton();
        Send = new javax.swing.JButton();
        OutputScrollPane = new javax.swing.JScrollPane();
        OutputArea = new javax.swing.JTextPane();
        CListAdd = new javax.swing.JTextField();
        CListAddButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        NameFrame.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        NameFrame.setAlwaysOnTop(true);
        NameFrame.setBounds(new java.awt.Rectangle(100, 100, 400, 330));
        NameFrame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                NameFrameWindowClosed(evt);
            }
        });

        NameLabel.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        NameLabel.setText("Enter name");

        NameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        NameOk.setText("Ok");
        NameOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameOkActionPerformed(evt);
            }
        });

        NameCancel.setText("Exit");

        ErrorLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ErrorLabel.setForeground(new java.awt.Color(204, 0, 0));
        ErrorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout NameFrameLayout = new javax.swing.GroupLayout(NameFrame.getContentPane());
        NameFrame.getContentPane().setLayout(NameFrameLayout);
        NameFrameLayout.setHorizontalGroup(
            NameFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NameFrameLayout.createSequentialGroup()
                .addGap(0, 44, Short.MAX_VALUE)
                .addGroup(NameFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NameFrameLayout.createSequentialGroup()
                        .addGroup(NameFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(NameFrameLayout.createSequentialGroup()
                                .addComponent(NameCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(154, 154, 154)
                                .addComponent(NameOk, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(NameText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NameFrameLayout.createSequentialGroup()
                        .addComponent(NameLabel)
                        .addGap(109, 109, 109))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NameFrameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(125, 125, 125))
        );
        NameFrameLayout.setVerticalGroup(
            NameFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NameFrameLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(NameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(NameText, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(ErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(NameFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameOk, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NameCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        MainPanel.setBackground(new java.awt.Color(0, 102, 153));

        InputArea.setBackground(new java.awt.Color(204, 204, 204));
        InputArea.setColumns(20);
        InputArea.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        InputArea.setLineWrap(true);
        InputArea.setRows(5);
        InputPane.setViewportView(InputArea);

        MyName.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MyName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        ContactList.setBackground(new java.awt.Color(7, 144, 144));
        ContactList.setFont(new java.awt.Font("Segoe UI", 2, 24)); // NOI18N
        ContactList.setModel(new DefaultListModel());
        ContactList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ContactList.setSelectionBackground(new java.awt.Color(0, 81, 81));
        ContactList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ContactListValueChanged(evt);
            }
        });
        ContactsPane.setViewportView(ContactList);

        LeftPanel.addTab("Contacts", ContactsPane);
        LeftPanel.addTab("Groups", GroupsPane);

        Attachments.setBackground(new java.awt.Color(0, 102, 0));
        Attachments.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        Attachments.setForeground(new java.awt.Color(255, 255, 255));
        Attachments.setText("Attachments");
        Attachments.setFocusPainted(false);
        Attachments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttachmentsActionPerformed(evt);
            }
        });

        Send.setBackground(new java.awt.Color(0, 153, 153));
        Send.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        Send.setForeground(new java.awt.Color(255, 255, 255));
        Send.setText("Send");
        Send.setBorder(null);
        Send.setBorderPainted(false);
        Send.setFocusPainted(false);
        Send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendActionPerformed(evt);
            }
        });

        OutputScrollPane.setBackground(new java.awt.Color(255, 255, 255));
        OutputScrollPane.setForeground(new java.awt.Color(255, 255, 255));
        OutputScrollPane.setOpaque(true);

        OutputArea.setEditable(false);
        OutputArea.setBackground(new java.awt.Color(153, 153, 153));
        OutputArea.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        OutputArea.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        OutputScrollPane.setViewportView(OutputArea);

        CListAddButton.setText("Add");
        CListAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CListAddButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(MainPanelLayout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(LeftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(MyName, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(CListAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CListAddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addComponent(InputPane, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Send, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Attachments, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)))
                    .addComponent(OutputScrollPane))
                .addContainerGap())
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                        .addComponent(MyName, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CListAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CListAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LeftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainPanelLayout.createSequentialGroup()
                        .addComponent(OutputScrollPane)
                        .addGap(18, 18, 18)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(MainPanelLayout.createSequentialGroup()
                                .addComponent(Attachments, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Send, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(InputPane, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))))
                .addContainerGap())
        );

        jMenu2.setText("Menu");

        jMenuItem3.setText("Logout");
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        jMenu1.setText("Contacts");

        jMenuItem2.setText("Add Contact");
        jMenu1.add(jMenuItem2);

        jMenuItem1.setText("Remove Contact");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendActionPerformed
        String text = InputArea.getText();
        outputQ.offer(text); 
        InputArea.setText("");
    }//GEN-LAST:event_SendActionPerformed

    private void NameOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameOkActionPerformed
        String Name = NameText.getText();
        if(Name.equals(""))
        {
            ErrorLabel.setText("Name can't be empty");
        }
        else
        {
            outputQ.add(Name);
            MyName.setText(Name);
            NameFrame.setVisible(false);
            this.setVisible(true);
        }
    }//GEN-LAST:event_NameOkActionPerformed

    private void NameFrameWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_NameFrameWindowClosed
        System.exit(0);
    }//GEN-LAST:event_NameFrameWindowClosed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        System.exit(0);
    }//GEN-LAST:event_formWindowClosed

    private void ContactListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ContactListValueChanged
        recipient = ContactList.getSelectedValue();
    }//GEN-LAST:event_ContactListValueChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        recipient = ContactList.getSelectedValue();
    }//GEN-LAST:event_formWindowOpened

    private void AttachmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttachmentsActionPerformed
        JFileChooser jc = new JFileChooser();
        jc.setDialogType(JFileChooser.OPEN_DIALOG);
        jc.showOpenDialog(null);
        File f = jc.getSelectedFile();
        try
        {
            BufferedImage imginput = ImageIO.read(f);
            Image img = imginput.getScaledInstance(200, -1, Image.SCALE_SMOOTH);
            doc.insertString(doc.getLength(),"\n", left);
            doc.setParagraphAttributes(doc.getLength(), 1, left, false);
            OutputArea.insertIcon(new ImageIcon(img));
//            outputFileQ.put(f);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_AttachmentsActionPerformed

    private void CListAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CListAddButtonActionPerformed
        String listItem = CListAdd.getText();
        if(listItem.length()>0)
        {
            DefaultListModel listmodel = (DefaultListModel)ContactList.getModel();
            listmodel.addElement(listItem);
            CListAdd.setText("");
        }
    }//GEN-LAST:event_CListAddButtonActionPerformed
   
    
    private void setTextPaneAttrib()
    {
        doc = OutputArea.getStyledDocument();
        
        left = new SimpleAttributeSet();
        StyleConstants.setAlignment(left, StyleConstants.ALIGN_LEFT);
        StyleConstants.setForeground(left, Color.RED);

        right = new SimpleAttributeSet();
        StyleConstants.setAlignment(right, StyleConstants.ALIGN_RIGHT);
        StyleConstants.setForeground(right, Color.BLUE);
    }
    
    private void InputOutput() throws UnknownHostException, IOException
    {
          
        
        // getting localhost ip 
        InetAddress ip = InetAddress.getByName("localhost");
        
        Socket s=null; 
        
        // set name 
        String name = "";
        try
        {
            name = outputQ.take();
        }
        catch(InterruptedException e)
        {
            e.printStackTrace();
        }
        
        // establish the connection 
        try
        {
            s = new Socket(ip, ServerPort); 
        }
        catch(IOException e)
        {
            System.out.println("Server is offline");
            serverOffline = true;
            System.exit(0);
        } 
        // obtaining input and out streams 
        DataInputStream dis = new DataInputStream(s.getInputStream()); 
        DataOutputStream dos = new DataOutputStream(s.getOutputStream()); 
        
        // send name to server
        dos.writeUTF(name);
        // sendMessage thread 
        Thread sendMessage = new Thread(new Runnable()  
        { 
            @Override
            public void run() { 
                try {
                while (!loggedout) {
                        // read the message to deliver. 
                        String msg = outputQ.take();
                        String sendmsg = msg + "#" + recipient.toLowerCase();
                        msg = recipient.toLowerCase() + " : " + msg;
                        doc.insertString(doc.getLength(), "\n" + msg, right);
                        doc.setParagraphAttributes(doc.getLength(), 1, right, false);
                        // write on the output stream 
                        dos.writeUTF(sendmsg); 
                        if(msg.equals("logout"))
                        {
                            loggedout = true;
                        }

                } 
                } catch (Exception e) { 
                    e.printStackTrace(); 
                } 
            }   
        }); 
          
        // readMessage thread 
        Thread readMessage = new Thread(new Runnable()  
        { 
            @Override
            public void run() { 
  
                try { 
                    
                    while (!loggedout) {
                        
                        // read the message sent to this client 
                        String msg = dis.readUTF();
                        if(msg.split(":")[1].trim().split(" ")[0].equals("ftp"))
                        { 
                           inputFileQ.put(msg.split(":")[1].trim().split(" ")[1]);
                            continue;
                        }
                        doc.insertString(doc.getLength(), "\n" + msg, left);
                        doc.setParagraphAttributes(doc.getLength(), 1, left, false);
                    } 
                } catch (Exception e) { 

                    System.out.println("Logged out");
                } 
            } 
        }); 
        

        Thread sendFile = new Thread(new Runnable()  
        { 
            @Override
            public void run() { 
                try
                {
                    ServerSocket serversocket = new ServerSocket(FilePort);
                    while (!loggedout) 
                    {
                        try { 
                            File file = outputFileQ.take();
                            String filename = file.getName();
                            System.out.println(filename);
                            outputQ.put("ftp "+filename);
                            Socket filesocket = serversocket.accept();
                            OutputStream fsout = filesocket.getOutputStream();
                            InputStream fin = new FileInputStream(file);
                            byte[] buffer = new byte[16*1024];
                            int count = 0;
                            while((count = fin.read(buffer)) > 0)
                            {
                                fsout.write(buffer, 0, count);
                            }
                            fsout.flush();
                            fin.close();
                            filesocket.close();
                        } 
                        catch (Exception e) 
                        { 
                            e.printStackTrace(); 
                        }
                    }
                    serversocket.close();
                }
                catch (Exception e) 
                { 
                    e.printStackTrace(); 
                } 
            } 
        }); 
          

        Thread readFile = new Thread(new Runnable()  
        { 
            @Override
            public void run() { 

                while (!loggedout) 
                {
                    try {
                            String fileext = inputFileQ.take().split("\\.")[1];
                            Socket filesocket = new Socket(ip, FilePort);
                            InputStream fsin = filesocket.getInputStream();
                            Date date = new Date();
                            SimpleDateFormat sdf = new SimpleDateFormat("ddMMyy-hhmmssSS");
                            File file = new File("F:\\chat-" + sdf.format(date) + "." + fileext);
                            file.createNewFile();
                            FileOutputStream fos = new FileOutputStream(file);
                            byte[] buffer = new byte[16*1024];
                            int count = 0;
                            while((count = fsin.read(buffer)) > 0)
                            {
                                fos.write(buffer, 0, count);
                            }
                            fos.flush();
                            fos.close();
                        } 
                    catch (Exception e) 
                    {
                        e.printStackTrace();
                    } 
                } 
            } 
        }); 
  
        sendMessage.start(); 
        readMessage.start();
        sendFile.start();
        readFile.start();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        Chat chatobj = new Chat();
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                chatobj.initComponents();
                chatobj.setTextPaneAttrib();
                chatobj.NameFrame.setVisible(true);
            }
        });
        
        try {
            chatobj.InputOutput();
        }catch(Exception e)
        {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Attachments;
    private javax.swing.JTextField CListAdd;
    private javax.swing.JButton CListAddButton;
    private javax.swing.JList<String> ContactList;
    private javax.swing.JScrollPane ContactsPane;
    private javax.swing.JLabel ErrorLabel;
    private javax.swing.JScrollPane GroupsPane;
    private javax.swing.JTextArea InputArea;
    private javax.swing.JScrollPane InputPane;
    private javax.swing.JTabbedPane LeftPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JLabel MyName;
    private javax.swing.JButton NameCancel;
    private javax.swing.JFrame NameFrame;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JButton NameOk;
    private javax.swing.JTextField NameText;
    private javax.swing.JTextPane OutputArea;
    private javax.swing.JScrollPane OutputScrollPane;
    private javax.swing.JButton Send;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    // End of variables declaration//GEN-END:variables
}
